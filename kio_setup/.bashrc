case $- in
  *i*) ;;
    *) return;;
esac
export OSH='/home/kio/.oh-my-bash'
OMB_USE_SUDO=true
completions=(
  git
  composer
  ssh
)
aliases=(
  general
)
plugins=(
  git
  bashmarks
)
#===============================CONFIG========================================
source /home/kio/.config/kio_setup/setup.bash
alias use-snap="export PATH=$PATH:/var/lib/snapd/snap/bin"
backup_folder="/home/kio/backup/apps/bash/"
alias winmnt="sudo mount /dev/nvme0n1p3 /mnt"
alias do-backup="rsync -Pv ~/.bashrc ${backup_folder}bashrc$(LANG=en_us_88591; \
    date '+%d-%m-%Y'| sed 's/[[:blank:]:]//g')"
alias dnf="sudo dnf"
alias ipython='python -m IPython'
alias suspend-timer="echo 'systemctl suspend' | sudo at now +"
alias timer-suspend="echo 'systemctl suspend' | sudo at now +"
alias tmr="echo 'systemctl suspend' | sudo at now +"
alias opencvenv="source /home/kio/Documents/projects/opencv/env/bin/activate"
alias ":q"="exit"
alias cmake="cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1"
alias bash-help="cat ~/.bash-helpers/bash-cmd.txt"
alias vi-help="cat ~/.bash-helpers/vi-help.txt"
alias vihelp="cat ~/.bash-helpers/vi-help.txt"
alias vifmhelp="cat ~/.bash-helpers/vifm-help.txt"
alias vifm-help="vifmhelp"
alias brc="vi ~/.bashrc"
alias vrc="vi ~/.config/nvim/binds.vim"
alias tovrc="cd ~/.config/nvim"
alias vimplug="vi /home/kio/.config/nvim/lua/plugins.lua"
alias vihm="vifm . ."
alias sudo="sudo -E"
alias hist-no-num="fc -l -n 1 | sed 's/^\s*//'"
sslocal="/var/lib/snapd/snap/shadowsocks-rust/current/bin/sslocal"
alias sslocal="$sslocal"
alias sewan="sslocal -c /etc/shadowsocks-rust/config_rust1.json"
#alias sw="sslocal -c /etc/shadowsocks-rust/config_rust1.json &> /dev/null &"
paper() {
    PAPER_SERVER="https://ngaq2zsfl5.execute-api.eu-central-1.amazonaws.com/6480ad0caa/PgLaz9aOIfsoxvdQ4WN8wDEg4iDaZ4ZoCWyC6t1oEg#PaperVPN_europe"
    #timeout 20m sslocal -b 127.0.0.1:1488 --server-url $(curl -X GET $PAPER_SERVER) &> /dev/null &
    timeout 60m $sslocal -b 127.0.0.1:1488 --server-url $(curl -X GET $PAPER_SERVER) &> /dev/null &
}
export -f paper
alias sw="paper"
alias untgz="tar -xf $1 --one-top-level"
alias tgz="tar -czvf $1.tar.gz $1"
alias sb="sudo bash"
alias pwdath=export PATH=$(pwd):$PATH
alias diff="diff --color=always"

cd() {
    if [ "$1" = "help" ]; then
        cd /home/kio/.bash-helpers/; ls
    elif [ "$1" = "helpers" ]; then
        cd /home/kio/.bash-helpers/; ls
    else 
        command cd "$@"
    fi
}


export PATH="/home/kio/.local/bin:$PATH"
#export PATH=":$PATH"
#systemd-run --user --on-active=1min /bin/systemctl suspend
#хороший вариант. Точный

#paramters:
#function envcv {
#    echo "source /home/kio/program-files/anaconda3/envs/cvenv$1/bin/activate"
#    source "/home/kio/program-files/anaconda3/envs/cvenv$1/bin/activate"
#}

envcxx(){
    export CPLUS_INCLUDE_PATH="/usr/include/opencv4/"
    export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:/usr/include/tensorflow"
    echo "exported CPLUS_INCLUDE_PATH as '$CPLUS_INCLUDE_PATH'"
}
envssh(){
  host="$1"
  user="$2"
  passwd="$3"
    if [ -n $host ]; then
      host="192.168.88.165"
    else
      IP_VAR=$host
    fi
    if [ -n $user ]; then
      user="root"
    fi
    if [ -n $passwd ]; then
      passwd="root123"
    fi
    echo "/home/kkk_REMOVE_ME/dev/gui_demo"
    ssh-keygen -R $host
    sshfs $user@$host:/ ~/mnt/ssh
    ssh $user@$host 
  }

OSH_THEME="mairan"
source "$OSH"/oh-my-bash.sh

#================================ANACONDA=====================================
envanaconda(){
    # >>> conda initialize >>>
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup="$('/home/kio/program-files/anaconda3/bin/conda' 
                     'shell.bash' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/home/kio/program-files/anaconda3/etc/profile.d/conda.sh" ]; then
            . "/home/kio/program-files/anaconda3/etc/profile.d/conda.sh"
        else
            export PATH="/home/kio/program-files/anaconda3/bin:$PATH"
        fi
    fi
    unset __conda_setup
    # <<< conda initialize <<<
    export PATH="$PATH:/home/kio/program-files/anaconda3/bin/"
}

    # ================================AUTOGENERATED================================
    # Enable the subsequent settings only in interactive sessions
    #
#case $- in
#  *i*) ;;
#    *) return;;
#esac
    
    # Path to your oh-my-bash installation.
#export OSH='/home/kio/.oh-my-bash'
    
    # Set name of the theme to load. Optionally, if you set this to "random"
    # it'll load a random theme each time that oh-my-bash is loaded.
    #OSH_THEME="font"   #default theme
    
    # Uncomment the following line to use case-sensitive completion.
    # CASE_SENSITIVE="true"
    
    # Uncomment the following line to use hyphen-insensitive completion. Case
    # sensitive completion must be off. _ and - will be interchangeable.
    # HYPHEN_INSENSITIVE="true"
    
    # Uncomment the following line to disable bi-weekly auto-update checks.
    # DISABLE_AUTO_UPDATE="true"
    
    # Uncomment the following line to change how often to auto-update (in days).
    # export UPDATE_OSH_DAYS=13
    
    # Uncomment the following line to disable colors in ls.
    # DISABLE_LS_COLORS="true"
    
    # Uncomment the following line to disable auto-setting terminal title.
    # DISABLE_AUTO_TITLE="true"
    
    # Uncomment the following line to enable command auto-correction.
    # ENABLE_CORRECTION="true"
    
    # Uncomment the following line to display red dots whilst waiting for completion.
    # COMPLETION_WAITING_DOTS="true"
    
    # Uncomment the following line if you want to disable marking untracked files
    # under VCS as dirty. This makes repository status check for large repositories
    # much, much faster.
    # DISABLE_UNTRACKED_FILES_DIRTY="true"
    
    # Uncomment the following line if you want to change the command execution time
    # stamp shown in the history command output.  One of the following values can
    # be used to specify the timestamp format.
    # * 'mm/dd/yyyy'     # mm/dd/yyyy + time
    # * 'dd.mm.yyyy'     # dd.mm.yyyy + time
    # * 'yyyy-mm-dd'     # yyyy-mm-dd + time
    # * '[mm/dd/yyyy]'   # [mm/dd/yyyy] + [time] with colors
    # * '[dd.mm.yyyy]'   # [dd.mm.yyyy] + [time] with colors
    # * '[yyyy-mm-dd]'   # [yyyy-mm-dd] + [time] with colors
    # If not set, the default value is 'yyyy-mm-dd'.
    # HIST_STAMPS='yyyy-mm-dd'
    
    # Uncomment the following line if you do not want OMB to overwrite the existing
    # aliases by the default OMB aliases defined in lib/*.sh
    # OMB_DEFAULT_ALIASES="check"
    
    # Would you like to use another custom folder than $OSH/custom?
    # OSH_CUSTOM=/path/to/new-custom-folder
    
    # To disable the uses of "sudo" by oh-my-bash, please set "false" to
    # this variable.  The default behavior for the empty value is "true".
#OMB_USE_SUDO=true
    
    # Which completions would you like to load? (completions can be found in ~/.oh-my-bash/completions/*)
    # Custom completions may be added to ~/.oh-my-bash/custom/completions/
    # Example format: completions=(ssh git bundler gem pip pip3)
    # Add wisely, as too many completions slow down shell startup.
#completions=(
#  git
#  composer
#  ssh
#)
    # Which aliases would you like to load? (aliases can be found in ~/.oh-my-bash/aliases/*)
    # Custom aliases may be added to ~/.oh-my-bash/custom/aliases/
    # Example format: aliases=(vagrant composer git-avh)
    # Add wisely, as too many aliases slow down shell startup.
#aliases=(
#  general
#)
    # Which plugins would you like to load? (plugins can be found in ~/.oh-my-bash/plugins/*)
    # Custom plugins may be added to ~/.oh-my-bash/custom/plugins/
    # Example format: plugins=(rails git textmate ruby lighthouse)
    # Add wisely, as too many plugins slow down shell startup.
#plugins=(
#  git
#  bashmarks
#)
    
    # Which plugins would you like to conditionally load? (plugins can be found in ~/.oh-my-bash/plugins/*)
    # Custom plugins may be added to ~/.oh-my-bash/custom/plugins/
    # Example format: 
    #  if [ "$DISPLAY" ] || [ "$SSH" ]; then
    #      plugins+=(tmux-autoattach)
    #  fi
    
    #source "$OSH"/oh-my-bash.sh
    
    # User configuration
    # export MANPATH="/usr/local/man:$MANPATH"
    
    # You may need to manually set your language environment
    # export LANG=en_US.UTF-8
    
    # Preferred editor for local and remote sessions
    # if [[ -n $SSH_CONNECTION ]]; then
    #   export EDITOR='vim'
    # else
    #   export EDITOR='mvim'
    # fi
    
    # Compilation flags
    # export ARCHFLAGS="-arch x86_64"
    
    # ssh
    # export SSH_KEY_PATH="~/.ssh/rsa_id"
    
    # Set personal aliases, overriding those provided by oh-my-bash libs,
    # plugins, and themes. Aliases can be placed here, though oh-my-bash
    # users are encouraged to define aliases within the OSH_CUSTOM folder.
    # For a full list of active aliases, run `alias`.
    #
    # Example aliases
    # alias bashconfig="mate ~/.bashrc"
    # alias ohmybash="mate ~/.oh-my-bash"
    
    
